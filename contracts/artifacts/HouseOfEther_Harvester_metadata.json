{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "acceptingEntries",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "admin",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositSomeEthers",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "distributeTestEtherToMembers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "emergencySiphon",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFullAddressListAndMessages",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "userAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "userMessage",
								"type": "string"
							}
						],
						"internalType": "struct HouseOfEther_Harvester.User[]",
						"name": "addressListWithMessages",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOnlyAddressList",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "addressList",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOnlyAddressListLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "length",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "flag",
						"type": "bool"
					}
				],
				"name": "setAcceptingNewEntries",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "message",
						"type": "string"
					}
				],
				"name": "storeMessage",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "userAddresses",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "userMessages",
				"outputs": [
					{
						"internalType": "string",
						"name": "user_message",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"custom:dev-run-script": "./scripts/deploy_with_ethers.ts",
			"details": "Store & retrieve value in a variable",
			"kind": "dev",
			"methods": {
				"getFullAddressListAndMessages()": {
					"details": "Get all addresses & their associated user messages from the Harvester contract"
				},
				"getOnlyAddressList()": {
					"details": "Get the full list of addresess that have previously participated (registered) in the Harvester contract."
				},
				"setAcceptingNewEntries(bool)": {
					"details": "Set the flag of accepting new entries or not. Keep in mind, this test contract should be paused at some time, as the address array can grow arbitrarily long! Plus, the House of Ether workshops in Kavala (1st iteration) should finish by 2025, so they won't run forever! The flag is only changeable by the contract's deployer",
					"params": {
						"flag": "to set the `acceptingEntries` variable to."
					}
				},
				"storeMessage(string)": {
					"details": "Store a message and the sender address in the contract.",
					"params": {
						"message": "(as a simple string) to store"
					}
				}
			},
			"title": "House of Ether - Harvester contract!",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/HouseOfEther_Harvester.sol": "HouseOfEther_Harvester"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/HouseOfEther_Harvester.sol": {
			"keccak256": "0x274e0cd3e89ce0cbf8177baa626fa0d5936f32b7710799ad8d6d3516ea80b7d4",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://cef861f6c5f1b4646d7fdef7975dd4f2659cde4ace6198f5d5c95360058fb324",
				"dweb:/ipfs/QmNYwNbhyrYQtTtDjYCTL4bZbCyRB3ms56X6NdHPqE7iwo"
			]
		}
	},
	"version": 1
}